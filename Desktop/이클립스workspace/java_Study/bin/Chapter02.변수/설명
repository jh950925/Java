[변수란?]
	* 변수란, 단 하나의 값을 저장할 수 있는 메모리 공간
	* 변수에 새로운 값을 저장하면 기존의 값은 사라진다.
////////////////////////////////////////////////////////////////////////////////////////////
[변수의 선언과 초기화]
	ex) int age;
	
	* 변수타입	: int 
	* 변수명		: age
	
	1. 변수의 초기화
		- 변수를 선언한 이후부터 사용할 수 있으나, 변수를 반드시 사용전에 초기화(initialization) 해야한다.
		- 메모리는 여러 프로그램이 공유하는 자원이므로 이 전에 사용했던
		  쓰레기 값(garbage value)가 남아있을 수 있다.		
////////////////////////////////////////////////////////////////////////////////////////////
[변수의 명명규칙]
	* 프로그래밍에서 사용하는 모든 이름을 "식별자(identifier)"이라고 한다.
	* 식별자 규칙
		1. 대소문자 구분되며 길이에 제한이 없다.
			-True와 true는 서로 다른 것으로 간주된다.
			
		2. 예약어를 사용해선느 안 된다
			-true는 예약어라서 사용할 수 없지만, True는 사용 가능하다.
			 
		3. 숫자로 시작해서는 안 된다.
			- top10은 허용하지만, 7up은 허용되지 않는다.
				
		4. 특수문자는 '_'와 '$'만을 허용한다.
			- $nap은 허용되지만 S#ap은 허용되지 않는다.		
////////////////////////////////////////////////////////////////////////////////////////////
[기본형]
	1. 논리형
		- boolean(1 byte)
	
	2. 문자형
		- char(2 byte)
		- char는 내부적으로 정수(유니코드)로 저장하기 때문에 정수형과 크게 다르지 않으며 정수형, 실수형과 연산도 가능하다. 
		
	3. 정수형
		- byte(1 byte), short(2 byte), int(4 byte), long(8 byte)
	
	4. 실수형
		- float(4 byte), double(8 byte) 
////////////////////////////////////////////////////////////////////////////////////////////
[상수와 리터럴]
	1. 상수 (constant)
		- 변수와 다르게 한 번 값을 저장하면 다른 값으로 변경할 수 없다.
		- 선언 방법은 final을 사용한다.
		ex) final int MAX_SPEED = 10;
		- 상수는 선언과 동시에 초기화 해야한다. (JDK1.6부터 초기화 하지 않아도 괜찮다.)
		- 상수의 이름은 대문자로 사용하는것이 암묵적인 관례이다.
	
	2. 리터럴 (literal) 
		- 우리가 알 고 있던 "상수"의 다른 이름이다.
		int year = 2014;
		final int MAX_VALUE = 100;
		//리터럴 : 2014, 100
		




















				